unit UCorretores;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, Vcl.Buttons, Vcl.ExtCtrls,
  Data.DB, Vcl.Grids, Vcl.DBGrids, Vcl.Mask, Vcl.DBCtrls, FireDAC.Stan.Intf,
  FireDAC.Stan.Option, FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS,
  FireDAC.Phys.Intf, FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt,
  FireDAC.Comp.DataSet, FireDAC.Comp.Client, Vcl.Imaging.pngimage;

type
  TdbGridPadrao = class(TDBGrid);
  TfrmCorretores = class(TForm)
    PainelTopo: TPanel;
    tcCorretores: TFDTransaction;
    qryCorretores: TFDQuery;
    dsCorretores: TDataSource;
    qryCorretoresCORRETORID: TIntegerField;
    qryCorretoresNOME: TStringField;
    qryCorretoresCPF: TStringField;
    qryCorretoresCIDADE: TStringField;
    Panel1: TPanel;
    painelBtnNovo: TPanel;
    btnNovo: TSpeedButton;
    PainelCancelar: TPanel;
    btnCancelar: TSpeedButton;
    painelSalvar: TPanel;
    btnSalvar: TSpeedButton;
    PainelExcluir: TPanel;
    btnExcluir: TSpeedButton;
    painelEditar: TPanel;
    btnEditar: TSpeedButton;
    gbPesquisa: TGroupBox;
    editPesquisa: TEdit;
    labelPesquisar: TLabel;
    gridCorretor: TDBGrid;
    Image1: TImage;
    gbEdits: TGroupBox;
    labelDestino: TLabel;
    editNome: TDBEdit;
    labelCPF: TLabel;
    editCPF: TDBEdit;
    editCidade: TDBEdit;
    labelCidade: TLabel;
    Label1: TLabel;
    procedure btnNovoClick(Sender: TObject);
    procedure btnCancelarClick(Sender: TObject);
    procedure btnEditarClick(Sender: TObject);
    procedure btnSalvarClick(Sender: TObject);
    procedure btnExcluirClick(Sender: TObject);
    procedure FormClose(Sender: TObject; var Action: TCloseAction);
    procedure FormShow(Sender: TObject);
    procedure editNomeKeyPress(Sender: TObject; var Key: Char);
    procedure editCPFKeyPress(Sender: TObject; var Key: Char);
    procedure editCPFKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure editNomeKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure editCidadeKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure editPesquisaChange(Sender: TObject);
    procedure gridCorretorDrawColumnCell(Sender: TObject; const Rect: TRect;
      DataCol: Integer; Column: TColumn; State: TGridDrawState);
    procedure gridCorretorDblClick(Sender: TObject);
    procedure editPesquisaKeyDown(Sender: TObject; var Key: Word;
      Shift: TShiftState);
    procedure editPesquisaKeyPress(Sender: TObject; var Key: Char);
  private
    { Private declarations }

    procedure configurarEnables(status : integer);
    procedure definirTamanhoDaLinhaDaGrid;
    procedure CapturarCorretor;

  public
    { Public declarations }
    Action : string;
  end;

var
  frmCorretores: TfrmCorretores;

implementation

{$R *.dfm}

uses UPrincipalPetrotorque, UVendaPosto;

{ TfrmCorretores }

procedure TfrmCorretores.btnCancelarClick(Sender: TObject);
begin
 configurarEnables(0);
 qryCorretores.Cancel;
end;

procedure TfrmCorretores.btnEditarClick(Sender: TObject);
begin
 configurarEnables(1);
 qryCorretores.Edit;
end;

procedure TfrmCorretores.btnExcluirClick(Sender: TObject);
 var AuxErro : string;
   begin
    configurarEnables(0);
      if MessageBox(Application.Handle,'Deseja excluir esse registro?','Confirmação',MB_YESNO + MB_ICONQUESTION) = mrYes then
        begin
           try
              qryCorretores.Delete;
             except
            on E : Exception do
             begin
               AuxErro := Copy(E.Message,0,25);
               ShowMessage(AuxErro);
             end;
           end;
        end;
   end;

procedure TfrmCorretores.btnNovoClick(Sender: TObject);
begin
  configurarEnables(1);
  editNome.SetFocus;
  qryCorretores.Insert;
end;

procedure TfrmCorretores.btnSalvarClick(Sender: TObject);
begin
      qryCorretores.Post;
      configurarEnables(0);

    try
      tcCorretores.CommitRetaining;
    finally
       tcCorretores.RollbackRetaining;
    end;
end;

procedure TfrmCorretores.CapturarCorretor;
begin
  begin
        if qryCorretores.RecordCount > 0 then
          begin
            frmVendaPostos.qryCorretor.Refresh;
            frmVendaPostos.editCorretor.Text := qryCorretores['NOME'];
            frmVendaPostos.qryCorretor.Locate('corretorid', qryCorretores['corretorid'] , []);
            Close;
          end;
     end;
end;

procedure TfrmCorretores.configurarEnables(status: integer);
  begin
      if status = 0 then
    begin
      btnNovo.Enabled := True;
      btnEditar.Enabled := True;
      btnExcluir.Enabled := True;
      btnCancelar.Enabled := False;
      btnSalvar.Enabled := False;
      gbEdits.Enabled := False;
      gbPesquisa.Enabled := true;
      gridCorretor.Enabled := True;
    end
   else
    begin
      btnNovo.Enabled := False;
      btnEditar.Enabled := False;
      btnExcluir.Enabled := False;
      btnCancelar.Enabled := True;
      btnSalvar.Enabled := True;
      gbEdits.Enabled := True;
      gbPesquisa.Enabled := false;
      gridCorretor.Enabled := false;
    end;
  end;

procedure TfrmCorretores.definirTamanhoDaLinhaDaGrid;
begin
  //Define o tamanho de cada linha do DBgrid após ativar a QUERY
  TdbGridPadrao(gridCorretor).DefaultRowHeight := 25;
  TdbGridPadrao(gridCorretor).ClientHeight := ( 25 * TdbGridPadrao(gridCorretor).RowCount ) + 25;

end;

procedure TfrmCorretores.editCidadeKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
 if Key = VK_F12 then
       btnSalvar.Click;
end;

procedure TfrmCorretores.editCPFKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key = VK_F12 then
       btnSalvar.Click;
end;

procedure TfrmCorretores.editCPFKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
     begin
       editCidade.SetFocus;
       Key := #0;
     end;
end;

procedure TfrmCorretores.editNomeKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
 if Key = VK_F12 then
       btnSalvar.Click;
end;

procedure TfrmCorretores.editNomeKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
     begin
       editCPF.SetFocus;
       Key := #0;
     end;
end;

procedure TfrmCorretores.editPesquisaChange(Sender: TObject);
begin
    with qryCorretores do
      begin
        Close;
        SQL.Clear;
        SQL.Add('select * from corretor where nome like '+ QuotedStr('%' + editPesquisa.Text + '%') +' order by NOME asc ');
        Open();
      end;

      definirTamanhoDaLinhaDaGrid;
end;

procedure TfrmCorretores.editPesquisaKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
 begin
  if Key = VK_RETURN then
      CapturarCorretor;
  if Key = VK_DOWN then
      qryCorretores.Next;
  if Key = VK_UP then
      qryCorretores.Prior;
 end;

procedure TfrmCorretores.editPesquisaKeyPress(Sender: TObject; var Key: Char);
begin
  if Key = #13 then
      Key := #0;
end;

procedure TfrmCorretores.FormClose(Sender: TObject; var Action: TCloseAction);
begin
  qryCorretores.Close;
end;

procedure TfrmCorretores.FormShow(Sender: TObject);
begin
  qryCorretores.Open;
  definirTamanhoDaLinhaDaGrid;
  configurarEnables(0);
end;

procedure TfrmCorretores.gridCorretorDblClick(Sender: TObject);
begin
  CapturarCorretor;
end;

procedure TfrmCorretores.gridCorretorDrawColumnCell(Sender: TObject;
  const Rect: TRect; DataCol: Integer; Column: TColumn; State: TGridDrawState);
begin
    //zebrando o dbgrid
    if Odd(gridCorretor.DataSource.DataSet.RecNo) then
        gridCorretor.Canvas.Brush.Color := $00CFCFCF
       else
          gridCorretor.Canvas.Brush.Color := clWhite;


    //mudando a cor da seleção
    if ( gdSelected in State ) then
         begin
            gridCorretor.Canvas.Brush.Color := $00BC7B50;
             gridCorretor.Canvas.Font.Color := clWhite;
              gridCorretor.Canvas.Font.Style := [fsBold];
         end;



        gridCorretor.Canvas.FillRect( Rect );
        gridCorretor.DefaultDrawColumnCell( Rect, DataCol, Column, State );


   //  mudando a posição e alinhamento vertical do texto de cada linha
     gridCorretor.Canvas.TextRect(Rect, Rect.Left + 8, Rect.Top + 8, Column.Field.DisplayText);
end;

end.
